/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-05-28 12:18:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import uts.isd.model.User;
import java.util.List;

public final class admin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("uts.isd.model.User");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  <title>Admin Dashboard</title>\n");
      out.write("  <link rel=\"stylesheet\" href=\"admin.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<h2>Admin Dashboard</h2>\n");
 User currentUser = (User) session.getAttribute("loggedInUser");
  if (currentUser == null || !currentUser.isAdmin()) { 
      out.write("\n");
      out.write("<p style=\"color:red;\">You do not have permission to access this page.</p>\n");
      out.write("<a href=\"index.jsp\">Back to Home</a>\n");
 } else { 
      out.write("\n");
      out.write("<h3>User Management</h3>\n");
      out.write("<a href=\"userManagement.jsp\">Create New User</a> <!-- Link to userManagement.jsp -->\n");
      out.write("<form action=\"AdminServlet\" method=\"get\">\n");
      out.write("  <input type=\"hidden\" name=\"action\" value=\"search\">\n");
      out.write("  <label>Name:</label>\n");
      out.write("  <input type=\"text\" name=\"name\"><br>\n");
      out.write("  <label>Phone Number:</label>\n");
      out.write("  <input type=\"text\" name=\"phone\"><br>\n");
      out.write("  <button type=\"submit\">Search Users</button>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<h3>User List</h3>\n");
 List<User> users = (List<User>) session.getAttribute("users");
  if (users != null && !users.isEmpty()) { 
      out.write("\n");
      out.write("<table border=\"1\">\n");
      out.write("  <tr>\n");
      out.write("    <th>ID</th>\n");
      out.write("    <th>Name</th>\n");
      out.write("    <th>Email</th>\n");
      out.write("    <th>Phone</th>\n");
      out.write("    <th>Type</th>\n");
      out.write("    <th>Active</th>\n");
      out.write("    <th>Actions</th>\n");
      out.write("  </tr>\n");
      out.write("  ");
 for (User user : users) {
    if (user.getType() != User.UserType.ADMIN) { 
      out.write("\n");
      out.write("  <tr>\n");
      out.write("    <td>");
      out.print( user.getUserId() );
      out.write("</td>\n");
      out.write("    <td>");
      out.print( user.getFullName() );
      out.write("</td>\n");
      out.write("    <td>");
      out.print( user.getEmail() );
      out.write("</td>\n");
      out.write("    <td>");
      out.print( user.getPhone() != null ? user.getPhone() : "" );
      out.write("</td>\n");
      out.write("    <td>");
      out.print( user.getType() );
      out.write("</td>\n");
      out.write("    <td>");
      out.print( user.getIsActive() ? "Yes" : "No" );
      out.write("</td>\n");
      out.write("    <td>\n");
      out.write("      <a href=\"edit.jsp?userId=");
      out.print( user.getUserId() );
      out.write("\">Edit</a>\n");
      out.write("      <a href=\"AdminServlet?action=toggle&userId=");
      out.print( user.getUserId() );
      out.write('"');
      out.write('>');
      out.print( user.getIsActive() ? "Deactivate" : "Activate" );
      out.write("</a>\n");
      out.write("      <a href=\"AdminServlet?action=delete&userId=");
      out.print( user.getUserId() );
      out.write("\">Delete</a>\n");
      out.write("    </td>\n");
      out.write("  </tr>\n");
      out.write("  ");
 } 
      out.write('\n');
      out.write(' ');
      out.write(' ');
 } 
      out.write("\n");
      out.write("</table>\n");
 } else { 
      out.write("\n");
      out.write("<p>No users found.</p>\n");
 } 
      out.write("\n");
      out.write("<a href=\"LogoutServlet\">Logout</a>\n");
 } 
      out.write('\n');
 if (session.getAttribute("error") != null) { 
      out.write("\n");
      out.write("<p style=\"color:red;\">");
      out.print( session.getAttribute("error") );
      out.write("</p>\n");
 session.removeAttribute("error"); 
      out.write('\n');
 } 
      out.write('\n');
 if (session.getAttribute("message") != null) { 
      out.write("\n");
      out.write("<p style=\"color:green;\">");
      out.print( session.getAttribute("message") );
      out.write("</p>\n");
 session.removeAttribute("message"); 
      out.write('\n');
 } 
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
